/* .details .manga-details {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
} */
//================================CSS==================================================
    *{  
        margin:0;
        padding:0;
        box-siying:border-box;
        list-style:none;
        text-decoration:none;
        font-family: "M PLUS Rounded 1c", sans-serif;
        font-size: 1.5rem;
}
        body{
        background: #faeee7;
        width:100%;
        }
        p{
        color: #594a4e}
        h1{color: #33272a
        font-size:1.5rem}
.main-pg {
  display: flex;
}
.popular-manga {
  margin-top: 2rem;
  padding-top: 2rem;
  padding-left: 4rem;
  padding-bottom: 2rem;
  padding-right: 1rem;
  width: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  grid-gap: 2rem;
  background-color: #fff;
  border-top: 5px solid #e5e7eb;
}
.popular-manga > a {
  height: 500px;
  border-radius: 7px;
  border: 5px solid #e5e7eb;
}
.popular-manga > a:hover {
  transform: scale(1.05);
  transition: transform 0.3s ease-in-out;
}

.popular-manga > a img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 5px;
}
/* =========================MANGA ITEMS================ */
.manga-box {
  padding: 3rem 18rem;
  background-color: #faeee7;
  /* background-color: #fffffe; */
  margin: 2rem;
  border-radius: 7px;
}
.manga-box h1 {
  display: inline-block;
  font-size: 2rem;
  cursor: pointer;
  color: #0e172c;
}
.title-text {
  font-size: 3rem;
}

.descriprion {
  margin-top: 1rem;
  color: #0e172c;
  line-height: 1.7rem;
}
.descriprion button {
  border: none;
  background-color: transparent;
  outline: none;
  cursor: pointer;
  font-size: 1.2rem;
  font-weight: 600;
  /* color: #80f992; */
}
.details {
  background-color: #fffffe;
  border-radius: 20px;
  padding: 2rem;
  border: 5px solid #f9dac8cc;
}
.details .detail {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
}

.details .detail img {
  border-radius: 7px;
}

.details .manga-details {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.details .manga-details p {
  display: flex;
  gap: 1rem;
}
.details .manga-details p span:first-child {
  font-weight: 550;
  font-size: 2rem;
  color: #33272a;
}
@media (max-width: 768px) {
  .manga-box {
    padding: 2rem;
  }
  .details .detail {
    grid-template-columns: 1fr;
    gap: 2rem;
  }
  .title-text {
    font-size: 2rem;
  }
}
//===========================================================================================================================================
      <h3 className="title">Characters</h3>
      <section className="characters">
        {characters?.map((character, index) => {
          const { role } = character;
          const { images, name, mal_id } = character.character;
          return (
            <Link to={`/character/${mal_id}`} key={index}>
              <div className="character">
                <img
                  src={images?.jpg.image_url}
                  alt={"Illustration of " + name}
                />
                <h4>{name}</h4>
                <p>{role}</p>
              </div>
            </Link>
          );
        })}
      </section>
      //===========================================================================================================================
      
/* 
@media (max-width: 300px) {
  .manga-box,
  .characters {
    padding: 10px;
    margin: 0;
  }
  .manga-box img {
    width: 250px;
  }
  .detail {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .details .detail {
    grid-template-columns: 1fr;
    gap: 1rem;
  }
  .title {
    font-size: 0.6rem;
  }
} */
//===================================================================================================================
  const getOngoingManga = async () => {
    dispatch({ type: LOADING });
    const response = await fetch(
      `${baseUrl}/top/manga?filter=bystatus=publishing`
    );
    const data = await response.json();
    dispatch({ type: GET_ONGOING_MANGA, payload: data.data });
  };
  //=====================================================================================================================
    const searchManga = async (manga) => {
    dispatch({ type: LOADING });
    const response = await fetch(
      `https://api.jikan.moe/v4/search/manga?q=${manga}`
    );
    const data = await response.json();
    dispatch({ type: SEARCH, payload: data.data });
  };
  //=====================================================================================
  /* .manga-box {
  padding: 3rem 18rem;
  background-color: #faeee7;
  margin: 2rem;
  border-radius: 7px;
} */
//================================================================================================================
header {
  background-color: #fec7d7;
  color: #33272a;
  max-width: 1200px;
}
.header-cont {
  padding: 2rem 5rem;
  width: 60%;
  margin: 0 auto;
  transition: all 0.4s ease-in-out;
}
.logo-hmpage {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 2rem;
}
.search-container {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
}
.search-container button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.7rem 1.5rem;
  outline: none;
  border-radius: 30px;
  font-size: 1.2rem;
  color: #33272a;
  background-color: #fdfdfd;
  cursor: pointer;
  transition: al 0.4s ease-in-out;
  font-family: inherit;
  border: 3px solid #5e5f6015;
}
form {
  position: relative;
  width: 100%;
}
.input-control {
  position: relative;

  transition: all 0.4s ease-in-out;
}
.input-control input {
  width: 100%;
  padding: 0.7rem 1rem;
  border: none;
  outline: none;
  border-radius: 30px;
  border: 3px solid #5e5f6015;
  font-size: 1.2rem;
  transition: all 0.4s ease-in-out;
}
.input-control button {
  position: absolute;
  right: 0;
  top: 50%;
  transform: translateY(-50%);
}
//0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
/* =============================================================STYLING HOMEPAGE================================================ */
header {
  background-color: #fec7d7;
  color: #33272a;
  max-width: 1200px;
  margin: 0 auto;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.141);
}

.header-cont {
  padding: 2rem 5rem;
  width: 100%;
  max-width: 60%;
  margin: 0 auto;
  transition: all 0.4s ease-in-out;
}

.logo-hmpage {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 2rem;
}

.search-container {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
}

.search-container button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.7rem 1.5rem;
  outline: none;
  border-radius: 30px;
  font-size: 1.2rem;
  color: #33272a;
  background-color: #fdfdfd;
  cursor: pointer;
  transition: all 0.4s ease-in-out;
  font-family: inherit;
  border: 3px solid #5e5f6015;
}

form {
  position: relative;
  width: 100%;
}

.input-control {
  position: relative;
  transition: all 0.4s ease-in-out;
}

.input-control input {
  width: 100%;
  padding: 0.7rem 1rem;
  border: none;
  outline: none;
  border-radius: 30px;
  border: 3px solid #5e5f6015;
  font-size: 1.2rem;
  transition: all 0.4s ease-in-out;
}
.input-control input:focus {
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
  border: 3px solid #fec7d7;
}
.input-control button {
  position: absolute;
  right: 0;
  top: 50%;
  transform: translateY(-50%);
  padding: 0.5rem 1rem; /* Added padding for better click area */
}
@media (max-width: 1024px) {
  .header-cont {
    padding: 1.5rem 3rem;
    max-width: 80%;
  }

  .search-container {
    flex-direction: column; /* Stack search bar and button vertically */
    gap: 1rem;
  }

  .search-container button {
    width: 100%; /* Make buttons take full width */
    justify-content: center;
  }
}

@media (max-width: 768px) {
  .header-cont {
    padding: 1.2rem 2rem;
    max-width: 100%;
    text-align: center;
  }

  .input-control input {
    font-size: 1rem;
    padding: 0.5rem 0.8rem;
  }

  .search-container button {
    font-size: 1rem;
    padding: 0.5rem 1rem;
  }
}

@media (max-width: 480px) {
  .header-cont {
    padding: 1rem;
  }

  .search-container {
    gap: 0.8rem;
  }

  .input-control input {
    padding: 0.4rem 0.7rem;
  }

  .search-container button {
    padding: 0.4rem 0.9rem;
  }
}
//======================================================================================================================
 // else {
    //   return searchResults?.map((manga) => {
    //     return (
    //       <Link to={`/manga/${manga.mal_id}`} key={manga.mal_id}>
    //         <img
    //           src={manga.images.jpg.large_image_url}
    //           alt={"Manga cover of " + manga.title}
    //         />
    //       </Link>
    //     );
    //   });
    // }
//0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
  //===================FETCHING ONGOING MANGA===================
  const getOngoingManga = async () => {
    dispatch({ type: LOADING });
    try {
      const response = await fetch(`${baseUrl}/top/manga?status=finished`);
      const data = await response.json();
      dispatch({ type: GET_ONGOING_MANGA, payload: data.data });
    } catch (error) {
      console.error("Failed to fetch ongoing manga:", error);
    }
  };

  //===================FETCHING FINISHED MANGA===================
  const getFinishedManga = async () => {
    dispatch({ type: LOADING });
    const response = await fetch(`${baseUrl}/top/manga?status=complete`);
    const data = await response.json();
    dispatch({ type: GET_FINISHED_MANGA, payload: data.data });
  };